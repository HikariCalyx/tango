syntax = "proto3";

package tango.lobby;

message GameInfo {
  message Patch {
    string name = 1;
    string version = 2;
  }

  string rom_name = 1;
  Patch patch = 2;
}

message Settings { bool open = 1; }

message CreateStreamToServerMessage {
  message CreateRequest {
    string nickname = 1;
    GameInfo game_info = 2;
    repeated GameInfo available_games = 3;
    Settings settings = 4;
    bytes save_data = 5;
  }

  message AcceptRequest { uint32 opponent_id = 1; }

  message RejectRequest { uint32 opponent_id = 1; }

  oneof which {
    CreateRequest create_req = 1;
    AcceptRequest accept_req = 2;
    RejectRequest reject_req = 3;
  }
}

message CreateStreamToClientMessage {
  message CreateResponse { string lobby_id = 1; }

  message JoinIndication {
    uint32 opponent_id = 1;
    string opponent_nickname = 2;
    GameInfo game_info = 3;
    bytes save_data = 4;
  }

  message AcceptResponse { string session_id = 1; }

  message RejectResponse {}

  message DisconnectIndication {
    enum Reason {
      UNKNOWN = 0;
      START_TIMEOUT = 1;
      WAIT_TIMEOUT = 2;
    }
    Reason reason = 1;
  }

  oneof which {
    DisconnectIndication disconnect_ind = 1;
    CreateResponse create_resp = 2;
    JoinIndication join_ind = 3;
    AcceptResponse accept_resp = 4;
    RejectResponse reject_resp = 5;
  }
}

message JoinStreamToServerMessage {
  message JoinRequest {
    string nickname = 1;
    string lobby_id = 2;
    GameInfo game_info = 3;
    bytes save_data = 4;
  }

  oneof which { JoinRequest join_req = 1; }
}

message JoinStreamToClientMessage {
  message JoinResponse {
    enum Status {
      UNKNOWN = 0;
      OK = 1;
      NOT_FOUND = 2;
    }
    Status status = 1;
  }

  message AcceptIndication { string session_id = 1; }

  message DisconnectIndication {
    enum Reason {
      UNKNOWN = 0;
      START_TIMEOUT = 1;
      LOBBY_CLOSED = 2;
      REJECTED = 3;
    }
    Reason reason = 1;
  }

  oneof which {
    DisconnectIndication disconnect_ind = 1;
    JoinResponse join_resp = 2;
    AcceptIndication accept_ind = 3;
  }
}

message GetInfoRequest { string lobby_id = 1; }

message GetInfoResponse {
  string opponent_nickname = 1;
  GameInfo game_info = 2;
  repeated GameInfo available_games = 3;
  Settings settings = 4;
}

message GetSaveDataRequest { string lobby_id = 1; }

message GetSaveDataResponse { bytes save_data = 1; }
